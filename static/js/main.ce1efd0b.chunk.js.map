{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","deleteContact","createAction","submitContacts","changeFilter","contactsReducer","createReducer","state","action","payload","filter","id","contactsFilter","_","store","configureStore","reducer","contacts","devTools","process","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","onFormChange","target","value","addContact","newContactId","shortid","generate","checkContactList","normalizedName","toLocaleLowerCase","find","contact","alert","resetForm","className","s","form","onSubmit","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btn","ContactList","normalizedFilter","includes","getFilteredContacts","ul","map","li","onClick","onDeleteContact","Filter","Phonebook","box","divBox","boxList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce1efd0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__Ra-Kd\",\"ul\":\"ContactList_ul__3ll3V\",\"btn\":\"ContactList_btn__2RcnT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2byOO\",\"span\":\"Filter_span__uSHYk\",\"input\":\"Filter_input__3V-pP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3oJMD\",\"label\":\"ContactForm_label__3nCr6\",\"input\":\"ContactForm_input__sV5Ua\",\"span\":\"ContactForm_span__3WPFZ\",\"btn\":\"ContactForm_btn__2M8G0\"};","import { createAction } from '@reduxjs/toolkit';\n\n// import { DELETE, SUBMIT, CHANGE_FILTER } from './phonebook-types';\n\nexport const deleteContact = createAction('contact/delete');\nexport const submitContacts = createAction('contact/submit');\nexport const changeFilter = createAction('contact/changeFilter');\n// export const deleteContact = contactId => ({\n//   type: DELETE,\n//   payload: contactId,\n// });\n\n// export const submitContacts = contact => ({\n//   type: SUBMIT,\n//   payload: contact,\n// });\n\n// export const changeFilter = value => ({\n//   type: CHANGE_FILTER,\n//   payload: value,\n// });\n","// import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  deleteContact,\n  submitContacts,\n  changeFilter,\n} from './phonebook-actions';\n\nexport const contactsReducer = createReducer([], {\n  [submitContacts]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nexport const contactsFilter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\n// export const contactsFilter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case changeFilter:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export const contactsReducer = (state = [], { type, payload }) => {\n//   console.log(type);\n//   switch (type) {\n//     case submitContacts:\n//       return [...state, payload];\n\n//     case deleteContact:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n","// import { createStore, combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport { contactsReducer, contactsFilter } from './phonebook-reducer';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: contactsFilter,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n// console.log(process.env.NODE_ENV);\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: contactsFilter,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { submitContacts } from '../../redux/phonebook-actions';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(({ contacts }) => contacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = contact => dispatch(submitContacts(contact));\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    resetForm();\n    checkContactList();\n  };\n\n  const onFormChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = () => {\n    const newContactId = shortid.generate();\n    const newContact = { name, number, id: newContactId };\n    onSubmit(newContact);\n  };\n\n  const checkContactList = () => {\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : addContact();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label className={s.label} htmlFor={shortid.generate()}>\n        <span className={s.span}>Name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Григор Григорян\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onFormChange}\n          id={shortid.generate()}\n        />\n      </label>\n      <label className={s.label} htmlFor={shortid.generate()}>\n        <span className={s.span}>Number</span>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"111-22-33\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onFormChange}\n          id={shortid.generate()}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   contacts: PropTypes.arrayOf(PropTypes.object),\n//   onSubmit: PropTypes.func,\n// };\n\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state.contacts,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onSubmit: contact => dispatch(submitContacts(contact)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-actions';\nimport s from './ContactList.module.css';\n\nconst getFilteredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter),\n  );\n};\n\nexport default function ContactList() {\n  const contacts = useSelector(({ contacts, filter }) =>\n    getFilteredContacts(contacts, filter),\n  );\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// const getFilteredContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLocaleLowerCase();\n//   return contacts.filter(contact =>\n//     contact.name.toLocaleLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts, filter }) => ({\n//   contacts: getFilteredContacts(contacts, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  // const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      <span className={s.span}>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        // value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\n// Filter.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   value: state.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(changeFilter(e.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","// import { useState } from 'react';\n// import { connect } from 'react-redux';\n// import * as actions from '../../redux/actions';\n// import defaultContacts from './defaultContacts.json';\nimport s from './Phonebook.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n// import useLocalStorage from '../../hooks/useLocalStorage';\n\nfunction Phonebook() {\n  return (\n    <div className={s.box}>\n      <div>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className={s.divBox}>\n        <h2 className={s.title}>Contacts</h2>\n        <div className={s.boxList}>\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Phonebook;\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__1b6ZS\",\"box\":\"Phonebook_box__2VF9O\",\"divBox\":\"Phonebook_divBox__10Y2k\",\"boxList\":\"Phonebook_boxList__YD7vV\"};"],"sourceRoot":""}