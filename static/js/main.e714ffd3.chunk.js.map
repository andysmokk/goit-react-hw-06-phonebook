{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","hooks/useLocalStorage.js","components/Phonebook/Phonebook.js","App.js","index.js","components/Phonebook/Phonebook.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","contacts","useState","name","setName","number","setNumber","onFormChange","target","value","checkContactList","normalizedName","toLocaleLowerCase","find","contact","alert","newContactId","shortid","generate","id","addContact","resetForm","className","s","form","e","preventDefault","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btn","ContactList","onDeleteContact","ul","map","li","onClick","Filter","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","Phonebook","defaultContacts","setContacts","filter","setFilter","box","divBox","boxList","normalizedFilter","includes","getFilteredContacts","contactId","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e714ffd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2byOO\",\"span\":\"Filter_span__uSHYk\",\"input\":\"Filter_input__3V-pP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3oJMD\",\"label\":\"ContactForm_label__3nCr6\",\"input\":\"ContactForm_input__sV5Ua\",\"span\":\"ContactForm_span__3WPFZ\",\"btn\":\"ContactForm_btn__2M8G0\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit, contacts }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    resetForm();\r\n    checkContactList();\r\n  };\r\n\r\n  const onFormChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const addContact = () => {\r\n    const newContactId = shortid.generate();\r\n    const newContact = { name, number, id: newContactId };\r\n    onSubmit(newContact);\r\n  };\r\n\r\n  const checkContactList = () => {\r\n    const normalizedName = name.toLocaleLowerCase();\r\n    contacts.find(\r\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\r\n    )\r\n      ? alert(`${name} is already in contacts`)\r\n      : addContact();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <label className={s.label} htmlFor={shortid.generate()}>\r\n        <span className={s.span}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Григор Григорян\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onFormChange}\r\n          id={shortid.generate()}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={shortid.generate()}>\r\n        <span className={s.span}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"111-22-33\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onFormChange}\r\n          id={shortid.generate()}\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n// class OldContactForm extends Component {\r\n//   static propTypes = {\r\n//     contacts: PropTypes.arrayOf(PropTypes.object),\r\n//     onSubmit: PropTypes.func.isRequired,\r\n//   };\r\n\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   addContact = () => {\r\n//     const { name, number } = this.state;\r\n//     const { onSubmit } = this.props;\r\n//     const newContactId = shortid.generate();\r\n//     const newContact = { name, number, id: newContactId };\r\n//     onSubmit(newContact);\r\n//   };\r\n\r\n//   checkContactList = () => {\r\n//     const { contacts } = this.props;\r\n//     const { name } = this.state;\r\n//     const normalizedName = name.toLocaleLowerCase();\r\n//     contacts.find(\r\n//       contact => contact.name.toLocaleLowerCase() === normalizedName,\r\n//     )\r\n//       ? alert(`${name} is already in contacts`)\r\n//       : this.addContact();\r\n//   };\r\n\r\n//   onFormChange = ({ target }) => {\r\n//     const { name, value } = target;\r\n\r\n//     this.setState({\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   onSubmitForm = e => {\r\n//     e.preventDefault();\r\n//     this.resetForm();\r\n//     this.checkContactList();\r\n//   };\r\n\r\n//   resetForm = () => {\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     return (\r\n//       <form className={s.form} onSubmit={this.onSubmitForm}>\r\n//         <label className={s.label} htmlFor={this.nameInputId}>\r\n//           <span className={s.span}>Name</span>\r\n//           <input\r\n//             className={s.input}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             placeholder=\"Григор Григорян\"\r\n//             value={name}\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//             required\r\n//             onChange={this.onFormChange}\r\n//             id={shortid.generate()}\r\n//           />\r\n//         </label>\r\n//         <label className={s.label} htmlFor={this.numberInputId}>\r\n//           <span className={s.span}>Number</span>\r\n//           <input\r\n//             className={s.input}\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             placeholder=\"111-22-33\"\r\n//             value={number}\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//             required\r\n//             onChange={this.onFormChange}\r\n//             id={shortid.generate()}\r\n//           />\r\n//         </label>\r\n//         <button className={s.btn} type=\"submit\">\r\n//           Add contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.ul}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.li} key={id}>\r\n          {name}: {number}\r\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import { useState } from 'react';\nimport defaultContacts from './defaultContacts.json';\nimport s from './Phonebook.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nexport default function Phonebook() {\n  const [contacts, setContacts] = useLocalStorage('contacts', defaultContacts);\n  const [filter, setFilter] = useState('');\n\n  const deleteContact = contactId => {\n    setContacts(prev => {\n      return prev.filter(contact => contact.id !== contactId);\n    });\n  };\n\n  const formSubmitHandler = contact => {\n    setContacts([contact, ...contacts]);\n  };\n\n  const changeFilter = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div className={s.box}>\n      <div>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} contacts={contacts} />\n      </div>\n      <div className={s.divBox}>\n        <h2 className={s.title}>Contacts</h2>\n        <div className={s.boxList}>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contacts={getFilteredContacts()}\n            onDeleteContact={deleteContact}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__1b6ZS\",\"box\":\"Phonebook_box__2VF9O\",\"divBox\":\"Phonebook_divBox__10Y2k\",\"boxList\":\"Phonebook_boxList__YD7vV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__Ra-Kd\",\"ul\":\"ContactList_ul__3ll3V\",\"btn\":\"ContactList_btn__2RcnT\"};"],"sourceRoot":""}